<?php

use ArmoredCore\Controllers\BaseController;
use ArmoredCore\Interfaces\ResourceControllerInterface;
use ArmoredCore\WebObjects\Post;
use ArmoredCore\WebObjects\Redirect;
use ArmoredCore\WebObjects\View;

/**
 * CRUD Resource Controller for ActiveRecord Model Book
 *
 * Code generated by WebLogicMVC Code Builder
 *
 * Date: 2021-05-03
 *
 * WL Code Builder developed by SÃ­lvio Priem Mendes
 * *
 */
class ScaleController extends BaseController implements ResourceControllerInterface
{
    /**
     * Returns index view with all records
     */
    public function index()
    {
        $flights = Flight::all();
        $origins = [];
        $destinations=[];
        foreach ($flights as $flight){
            $airport_origin=Airport::find_by_airport_id($flight->origin);
            array_push($origins, $airport_origin->airport_name);
            $airport_destination=Airport::find_by_airport_id($flight->destination);
            array_push($destinations,$airport_destination->airport_name);
        }
        return View::make('flight.flightList', ['flights' => $flights , 'origins'=>$origins, 'destinations'=>$destinations]);
    }

    public function showByFlightId($flight_id){
        $scales=Scale::find_all_by_flight_id($flight_id);
        $_SESSION['flight_id']=$flight_id;
        $origins = [];
        $destinations=[];
        foreach ($scales as $scale){
            $airport_origin=Airport::find_by_airport_id($scale->origin);
            array_push($origins, $airport_origin->airport_name);
            $airport_destination=Airport::find_by_airport_id($scale->destination);
            array_push($destinations,$airport_destination->airport_name);
        }
        return View::make('scale.scaleList', ['scales'=>$scales,'origins'=>$origins, 'destinations'=>$destinations]);
    }

    public function create()
    {
        $airports= Airport::all();
        $airplanes= Airplane::all();
        return View::make('scale.scaleCreate', ['airports' => $airports , 'airplanes'=>$airplanes]);
    }

    /**
     * Receives new record data through POST method and stores it in the DB table
     */
    public function store()
    {
        //create new resource (activerecord/model) instance with data from POST
        //your form name fields must match the ones of the table fields
        $scale = new Scale(Post::getAll());
        $scale->flight_id=$_SESSION['flight_id'];

        //var_dump($airplanes);
        if($scale->is_valid()){
            $scale->save();
            Redirect::toRoute('scale/showByFlightId',$scale->flight_id);
        } else {
            //redirect to form with data and errors
            Redirect::flashToRoute('scale/create', ['scale' => $scale]);
        }
    }


    /**
     * return a detailed view with record where PK = $id
     */
    public function show($id)
    {
        $book = Book::find([$id]);

        if (is_null($book)) {
            //TODO redirect to standard error page
        } else {
            return View::make('book.show', ['book' => $book]);
        }
    }


    /**
     * return a editable form view with record where PK = $id
     */
    public function edit($id)
    {
        $scale = Scale::find([$id]);
        $airplanes=Airplane::all();
        $airports=Airport::all();

        if (is_null($scale)) {
            //TODO redirect to standard error page
        } else {
            return View::make('scale.scaleEdit', ['scale' => $scale ,'airplanes'=>$airplanes , 'airports'=>$airports]);
        }
    }


    /**
     * Receives record data through POST method and updates it in the DB table
     */
    public function update($id)
    {
        //find resource (activerecord/model) instance where PK = $id
        //your form name fields must match the ones of the table fields
        $scale = Scale::find([$id]);
        $scale->update_attributes(Post::getAll());

        if($scale->is_valid()){
            $scale->save();
            Redirect::toRoute('scale/showByFlightId',$scale->flight_id);
        } else {
            //redirect to form with data and errors
            Redirect::flashToRoute('scale/edit', ['scale' => $scale]);
        }
    }


    /**
     * deletes the record where PK = $id
     */
    public function destroy($id)
    {
        $scale= Scale::find([$id]);
        $scale->delete();
        Redirect::toRoute('scale/showByFlightId',$scale->flight_id);
    }
}